
<%-include('../adminPages/partialHead.ejs')%>

<style>


.main-content {
    margin-left: 250px;
    padding: 30px;
    width: calc(100% - 250px);
}

.dashboard-title {
    color: #333;
    margin-bottom: 30px;
    font-size: 24px;
    font-weight: 500;
}

.metrics-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 20px;
    margin-bottom: 30px;
}

.metric-card {
    background: white;
    padding: 20px;
    border-radius: 12px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.05);
}

.metric-title {
    color: #666;
    font-size: 14px;
    margin-bottom: 10px;
}

.metric-value {
    font-size: 28px;
    font-weight: 600;
    color: #333;
}

.graph-container {
    background: white;
    padding: 20px;
    border-radius: 12px;
    margin-bottom: 20px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.05);
}

.graph-title {
    color: #333;
    font-size: 16px;
    margin-bottom: 20px;
}



</style>

    <div class="main-content">
        <h1 class="dashboard-title">Dashboard</h1>
        
        <div class="metrics-grid">
            <div class="metric-card">
                <div class="metric-title">Overall Sales Count</div>
                <div class="metric-value"><%= totalSalesCount %></div>
            </div>
            <div class="metric-card">
                <div class="metric-title">Overall Order Amount</div>
                <div class="metric-value"><%= totalSales %></div>
            </div>
            <div class="metric-card">
                <div class="metric-title">Overall Discount</div>
                <div class="metric-value"><%= totalDiscount %></div>
            </div>
        </div>

        <!-- <div class="graph-container">
            <h2 class="graph-title">Sales Data Graph</h2>
            <div id="salesChart" style="height: 300px;"></div>
        </div>

        <div class="graph-container">
            <h2 class="graph-title">Revenue Data Graph</h2>
            <div id="revenueChart" style="height: 300px;"></div>
        </div> -->

        <div class="report-container">
            <h3 class="report-title">Generate Sales Report</h3>
            <form id="sales-report-form" method="POST" action="/admin/sales-report">
              <div class="form-group">
                <label for="startDate">Start Date:</label>
                <input type="date" id="startDate" name="startDate" required class="form-control">
              </div>
              <div class="form-group">
                <label for="endDate">End Date:</label>
                <input type="date" id="endDate" name="endDate" required class="form-control">
              </div>
              <div class="form-group">
                <label for="format">Format:</label>
                <select id="format" name="format" required class="form-control">
                  <option value="pdf">PDF</option>
                  <option value="excel">Excel</option>
                </select>
              </div>
              <button type="submit" class="btn btn-primary btn-block">Download Report</button>
            </form>
          </div>
    </div>

    

      <script>
        document.getElementById('sales-report-form').addEventListener('submit', async function (e) {
            e.preventDefault();

            const formData = new FormData(this);
            const startDate = formData.get('startDate');
            const endDate = formData.get('endDate');

            if (!startDate || !endDate) {
                alert('Please select both start and end dates.');
                return;
            }

            const response = await fetch('/admin/sales-report', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                startDate,
                endDate,
                format: formData.get('format'),
                }),
            });

            if (response.ok) {
                const blob = await response.blob();
                const format = formData.get('format');
                const link = document.createElement('a');
                link.href = URL.createObjectURL(blob);
                link.download = `sales_report.${format}`;
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            } else {
                const error = await response.text();
                alert(`Error: ${error}`);
            }
            });

      </script>
      

    <!-- Include ApexCharts for the graphs
    <script src="https://cdnjs.cloudflare.com/ajax/libs/apexcharts/3.35.0/apexcharts.min.js"></script>
    <script>
        // Sales Chart
        const salesOptions = {
            chart: {
                type: 'line',
                height: 300,
                toolbar: {
                    show: false
                }
            },
            series: [{
                name: 'Sales',
                data: [30, 40, 35, 50, 49, 60, 70]
            }],
            xaxis: {
                categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul']
            },
            stroke: {
                curve: 'smooth'
            },
            colors: ['#1890ff']
        };

        const salesChart = new ApexCharts(document.querySelector("#salesChart"), salesOptions);
        salesChart.render();

        // Revenue Chart
        const revenueOptions = {
            chart: {
                type: 'line',
                height: 300,
                toolbar: {
                    show: false
                }
            },
            series: [{
                name: 'Revenue',
                data: [3000, 4000, 3500, 5000, 4900, 6000, 7000]
            }],
            xaxis: {
                categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul']
            },
            stroke: {
                curve: 'smooth'
            },
            colors: ['#52c41a']
        };

        const revenueChart = new ApexCharts(document.querySelector("#revenueChart"), revenueOptions);
        revenueChart.render();
    </script> -->
